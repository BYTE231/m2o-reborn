cmake_minimum_required (VERSION 2.8)
project (m2o-reborn)

if (CMAKE_BINARY_DIR STREQUAL CMAKE_SOURCE_DIR)
    message(FATAL_ERROR "Please select another Build Directory ! (and give it a clever name, like bin_Visual2012_64bits/)")
endif()
if (CMAKE_SOURCE_DIR MATCHES " ")
    message("Your Source Directory contains spaces. If you experience problems when compiling, this can be the cause.")
endif()
if (CMAKE_BINARY_DIR MATCHES " ")
    message("Your Build Directory contains spaces. If you experience problems when compiling, this can be the cause.")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

if(MSVC)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd /Zi" CACHE STRING "Debug compiler flags" FORCE)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD /Zi" CACHE STRING "Release compiler flags" FORCE)
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")

    macro(GroupSources curdir)
        file(GLOB children RELATIVE ${PROJECT_SOURCE_DIR}/${curdir} ${PROJECT_SOURCE_DIR}/${curdir}/*)
        foreach (child ${children})
            if(IS_DIRECTORY ${PROJECT_SOURCE_DIR}/${curdir}/${child})
                GroupSources(${curdir}/${child})
            else()
                string(REPLACE "/" "\\" groupname ${curdir})
                source_group(${groupname} FILES ${PROJECT_SOURCE_DIR}/${curdir}/${child})
            endif()
        endforeach()
    endmacro()

    macro(GroupSourcesNamed name curdir)
        file(GLOB children RELATIVE ${PROJECT_SOURCE_DIR}/${curdir} ${PROJECT_SOURCE_DIR}/${curdir}/*)
        foreach (child ${children})
            if(IS_DIRECTORY ${PROJECT_SOURCE_DIR}/${curdir}/${child})
                GroupSourcesNamed(${name}/${child} ${curdir}/${child})
            else()
                string(REPLACE "/" "\\" groupname ${name})
                source_group(${groupname} FILES ${PROJECT_SOURCE_DIR}/${curdir}/${child})
            endif()
        endforeach()
    endmacro()

    macro(GroupSourcesBase)
        file(GLOB children RELATIVE ${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/*)
        foreach (child ${children})
            if(IS_DIRECTORY ${PROJECT_SOURCE_DIR}/${child})
                GroupSources(${child})
            else()
                source_group("" FILES ${PROJECT_SOURCE_DIR}/${child})
            endif()
        endforeach()
    endmacro()
endif()

if (M2O_SERVER)
    message("-- M2O_SERVER enabled, generating server project ...")
    add_subdirectory(projects/server)
endif()

if (M2O_CLIENT)
    message("-- M2O_CLIENT enabled, generating client, launcher projects ...")
    if (M2O_CEF)
        set(M2O_CEF 1)
        add_definitions(-DM2O_CEF=1)
        add_subdirectory(projects/cef_worker)
    endif()

    add_subdirectory(projects/m2sdk)
    add_subdirectory(projects/launcher)
    add_subdirectory(projects/client)
    # add_subdirectory(projects/m2o_sdl)
endif()

if(MSVC)
    GroupSources(projects/)
    GroupSources(vendor/)
endif()
